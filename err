==10159== Memcheck, a memory error detector
==10159== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10159== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10159== Command: ./bin/LAIR -v 1 -m tiny
==10159== 
==10159== Conditional jump or move depends on uninitialised value(s)
==10159==    at 0x4C32EA6: rawmemchr (vg_replace_strmem.c:1402)
==10159==    by 0x7582391: _IO_str_init_static_internal (strops.c:41)
==10159==    by 0x7575B66: vsscanf (iovsscanf.c:40)
==10159==    by 0x75702D6: sscanf (sscanf.c:32)
==10159==    by 0x13419E4A: ??? (in /usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0)
==10159==    by 0x1341A182: ??? (in /usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0)
==10159==    by 0x1341DBF8: drmGetDevice (in /usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0)
==10159==    by 0x11F642D6: ??? (in /usr/lib/x86_64-linux-gnu/libGL.so.1.2.0)
==10159==    by 0x11F63694: ??? (in /usr/lib/x86_64-linux-gnu/libGL.so.1.2.0)
==10159==    by 0x11F37988: ??? (in /usr/lib/x86_64-linux-gnu/libGL.so.1.2.0)
==10159==    by 0x11F33B9A: ??? (in /usr/lib/x86_64-linux-gnu/libGL.so.1.2.0)
==10159==    by 0x11F33FD1: glXQueryExtensionsString (in /usr/lib/x86_64-linux-gnu/libGL.so.1.2.0)
==10159==  Uninitialised value was created by a stack allocation
==10159==    at 0x13419D9D: ??? (in /usr/lib/x86_64-linux-gnu/libdrm.so.2.4.0)
==10159== 
==10159== Syscall param writev(vector[...]) points to uninitialised byte(s)
==10159==    at 0x75ECCFD: ??? (syscall-template.S:84)
==10159==    by 0xD38841C: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==10159==    by 0xD38881C: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==10159==    by 0xD38889C: xcb_writev (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==10159==    by 0x938AA7D: _XSend (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==10159==    by 0x938AF71: _XReply (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==10159==    by 0x9375E2E: XInternAtom (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==10159==    by 0x5A2946A: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.1)
==10159==    by 0x5A2A364: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.1)
==10159==    by 0x5A1A2EF: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.1)
==10159==    by 0x5A1A07E: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.1)
==10159==    by 0x5980456: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.1)
==10159==  Address 0x111f1ab3 is 35 bytes inside a block of size 16,384 alloc'd
==10159==    at 0x4C2DBC5: calloc (vg_replace_malloc.c:711)
==10159==    by 0x937AEC5: XOpenDisplay (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==10159==    by 0x5A2853F: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.1)
==10159==    by 0x5A1A02B: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.1)
==10159==    by 0x5980456: ??? (in /usr/lib/x86_64-linux-gnu/libSDL2-2.0.so.0.4.1)
==10159==    by 0x10AD34: lair_lair_construct (main.vala:20)
==10159==    by 0x10B420: lair_lair_new (main.vala:17)
==10159==    by 0x10BABF: lair_lair_main (main.vala:159)
==10159==    by 0x10BB39: main (main.vala:92)
==10159==  Uninitialised value was created by a stack allocation
==10159==    at 0x9386210: XStoreColors (in /usr/lib/x86_64-linux-gnu/libX11.so.6.3.0)
==10159== 
==10172== Warning: invalid file descriptor 1024 in syscall close()
==10172== 
==10172== HEAP SUMMARY:
==10172==     in use at exit: 2,511,279 bytes in 8,496 blocks
==10172==   total heap usage: 23,579 allocs, 15,083 frees, 27,592,723 bytes allocated
==10172== 
==10172== LEAK SUMMARY:
==10172==    definitely lost: 192 bytes in 7 blocks
==10172==    indirectly lost: 176 bytes in 4 blocks
==10172==      possibly lost: 1,640,625 bytes in 6,207 blocks
==10172==    still reachable: 870,046 bytes in 2,275 blocks
==10172==                       of which reachable via heuristic:
==10172==                         length64           : 696 bytes in 15 blocks
==10172==                         newarray           : 1,648 bytes in 23 blocks
==10172==         suppressed: 0 bytes in 0 blocks
==10172== Rerun with --leak-check=full to see details of leaked memory
==10172== 
==10172== For counts of detected and suppressed errors, rerun with: -v
==10172== ERROR SUMMARY: 13 errors from 2 contexts (suppressed: 0 from 0)

** (process:10159): CRITICAL **: lair_type_one_tag_to_list: assertion 'self != NULL' failed

** (process:10159): CRITICAL **: lair_type_check_type: assertion 'self != NULL' failed
==10159== Invalid read of size 8
==10159==    at 0x115B58: lair_type_construct_ParameterList (type.vala:29)
==10159==    by 0x116FEF: lair_anim_construct_Parameter (anim.vala:20)
==10159==    by 0x1164BE: lair_sprite_construct_ParameterList (sprite.vala:20)
==10159==    by 0x1184E0: lair_text_construct_Parameter (text.vala:29)
==10159==    by 0x118CD9: lair_voice_construct_Parameter (sound.vala:32)
==10159==    by 0x11952D: lair_stats_construct_Floor (stats.vala:136)
==10159==    by 0x11C5F1: lair_entity_construct_Floor (entity.vala:12)
==10159==    by 0x11D7E1: lair_entity_new_Floor (entity.vala:11)
==10159==    by 0x1119E6: lair_room_generate_floor_tile (room.vala:134)
==10159==    by 0x111BD5: lair_room_generate_floor (room.vala:180)
==10159==    by 0x112B8F: lair_room_construct_WithPlayer (room.vala:32)
==10159==    by 0x113B02: lair_room_new_WithPlayer (room.vala:24)
==10159==  Address 0x30 is not stack'd, malloc'd or (recently) free'd
==10159== 
==10159== 
==10159== Process terminating with default action of signal 11 (SIGSEGV)
==10159==  Access not within mapped region at address 0x30
==10159==    at 0x115B58: lair_type_construct_ParameterList (type.vala:29)
==10159==    by 0x116FEF: lair_anim_construct_Parameter (anim.vala:20)
==10159==    by 0x1164BE: lair_sprite_construct_ParameterList (sprite.vala:20)
==10159==    by 0x1184E0: lair_text_construct_Parameter (text.vala:29)
==10159==    by 0x118CD9: lair_voice_construct_Parameter (sound.vala:32)
==10159==    by 0x11952D: lair_stats_construct_Floor (stats.vala:136)
==10159==    by 0x11C5F1: lair_entity_construct_Floor (entity.vala:12)
==10159==    by 0x11D7E1: lair_entity_new_Floor (entity.vala:11)
==10159==    by 0x1119E6: lair_room_generate_floor_tile (room.vala:134)
==10159==    by 0x111BD5: lair_room_generate_floor (room.vala:180)
==10159==    by 0x112B8F: lair_room_construct_WithPlayer (room.vala:32)
==10159==    by 0x113B02: lair_room_new_WithPlayer (room.vala:24)
==10159==  If you believe this happened as a result of a stack
==10159==  overflow in your program's main thread (unlikely but
==10159==  possible), you can try to increase the size of the
==10159==  main thread stack using the --main-stacksize= flag.
==10159==  The main thread stack size used in this run was 8388608.
==10159== 
==10159== HEAP SUMMARY:
==10159==     in use at exit: 31,196,844 bytes in 60,157 blocks
==10159==   total heap usage: 410,269 allocs, 350,112 frees, 102,519,210 bytes allocated
==10159== 
==10159== LEAK SUMMARY:
==10159==    definitely lost: 6,768 bytes in 38 blocks
==10159==    indirectly lost: 226 bytes in 14 blocks
==10159==      possibly lost: 28,797,739 bytes in 51,797 blocks
==10159==    still reachable: 2,343,663 bytes in 7,987 blocks
==10159==                       of which reachable via heuristic:
==10159==                         length64           : 880 bytes in 19 blocks
==10159==                         newarray           : 1,680 bytes in 25 blocks
==10159==         suppressed: 0 bytes in 0 blocks
==10159== Rerun with --leak-check=full to see details of leaked memory
==10159== 
==10159== For counts of detected and suppressed errors, rerun with: -v
==10159== ERROR SUMMARY: 18 errors from 3 contexts (suppressed: 0 from 0)
make: *** [memcheck] Segmentation fault
